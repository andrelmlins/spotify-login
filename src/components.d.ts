/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface SpotifyLogin {
        /**
          * Client ID for Spotify OAuth application
         */
        "clientId": string;
        /**
          * The URI to redirect to after the user grants or denies permission.
         */
        "redirectUri": string;
        /**
          * Grant type the application wants to use
         */
        "responseType": string;
        /**
          * A space-delimited list of permissions that the application requires
         */
        "scope": string;
        /**
          * Whether or not to force the user to approve the app again if they’ve already done so.
         */
        "showDialog": boolean;
        /**
          * The state can be useful for correlating requests and responses
         */
        "state": string;
    }
}
declare global {
    interface HTMLSpotifyLoginElement extends Components.SpotifyLogin, HTMLStencilElement {
    }
    var HTMLSpotifyLoginElement: {
        prototype: HTMLSpotifyLoginElement;
        new (): HTMLSpotifyLoginElement;
    };
    interface HTMLElementTagNameMap {
        "spotify-login": HTMLSpotifyLoginElement;
    }
}
declare namespace LocalJSX {
    interface SpotifyLogin {
        /**
          * Client ID for Spotify OAuth application
         */
        "clientId"?: string;
        /**
          * Call with success
         */
        "onCompleted"?: (event: CustomEvent<any>) => void;
        /**
          * Call with error
         */
        "onFail"?: (event: CustomEvent<any>) => void;
        /**
          * Call with request
         */
        "onRequest"?: (event: CustomEvent<any>) => void;
        /**
          * The URI to redirect to after the user grants or denies permission.
         */
        "redirectUri"?: string;
        /**
          * Grant type the application wants to use
         */
        "responseType"?: string;
        /**
          * A space-delimited list of permissions that the application requires
         */
        "scope"?: string;
        /**
          * Whether or not to force the user to approve the app again if they’ve already done so.
         */
        "showDialog"?: boolean;
        /**
          * The state can be useful for correlating requests and responses
         */
        "state"?: string;
    }
    interface IntrinsicElements {
        "spotify-login": SpotifyLogin;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "spotify-login": LocalJSX.SpotifyLogin & JSXBase.HTMLAttributes<HTMLSpotifyLoginElement>;
        }
    }
}
